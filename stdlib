pi = 3.141592653589793238462643383279
tau = 2*pi

sumUpTo n -> (n * (n+1)) div 2
fac n -> if (n==0) 1 else n * fac (n-1)


ls -> exec 'ls'
clear -> execRaw 'clear' //This must use execRaw rather than "exec because clear is a builtin shell command, not a program


doTwice ~x -> {
  x
  x
}

map f xs -> if xs.empty [] else f xs.head :: map f xs.tail
filter f xs -> if xs.empty []
  else if (f xs.head) xs.head :: filter f xs.tail
  else filter f xs.tail

id x -> x


color r g b ?a=1 -> new {r=r, g=g, b=b, a=a}

list xs* -> xs

opt ?a=0 ?b=1 ?c=2 -> (a,b,c)

mkAccum n -> {var s <- n; i => s <- s+i}
