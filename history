gen = fileGen "tesT"
fileGen file -> makeGen (yield => withFile file "r" (file => while (!(file.atEOF)) {yield (file.readChar)}))
pwd
ls
echo
/echo wd
echo (wd)
/echo wd
echo wd
print wd
while (testGen.moveNext) (print (testGen.cur))
testGen = fileGen "test"
while (testGen.moveNext) (println (testGen.cur))
testGen = fileGen "test"
fileGen file -> withGen (yield => withFile file "r" (file => while (!(file.atEOF)) {yield (file.readChar)}))
testGen.moveNext
testGen.cur
testGen.moveNext
testGen.cur
testGen.moveNext
testGen.cur
testGen.moveNext
testGen.cur
testGen.moveNext
testGen = fileGen "test"
fileGen file -> withGen (yield => withFile file "r" (file => while (!(file.atEOF)) {yield (file.readChar)}))
testGen.moveNext
testGen = fileGen "test"
fileGen file -> makeGen (yield => withFile file "r" (file => while (!(file.atEOF)) {yield (file.readChar)}))
testGen.cur
testGen.moveNext
testGen.cur
testGen.moveNext
testGen.cur
testGen.moveNext
testGen.cur
testGen.moveNext
testGen.cur
testGen.next
testGen.cur
testGen = withGen (yield => {yield 5; yield 10; yield 15})
testGen.cur
testGen.moveNext
testGen.cur
testGen.cur
testGen.cur
testGen.moveNext
testGen.cur
testGen.moveNext
testGen.cur
testGen = withGen (yield => {yield 5; yield 10; yield 15})
testGen = fileGen "test"
fileGen file -> makeGen (yield => withFile file "r" (file => while (!(file.atEOF)) {yield (file.readChar)}))
testGen.cur
testGen.moveNext
testGen.cur
testGen.moveNext
testGen.cur
testGen.moveNext
testGen.cur
testGen.moveNext
testGen.cur
testGen.moveNext
testGen.cur
testGen = fileGen "test"
testGen = fileGen "tesT"
fileGen file -> withGen (yield => withFile file "r" (file => while (!(file.atEOF)) {yield (file.readChar)}))
makeGen
withFile 'test' 'r' (file => {println (file.readChar); println (file.readChar); println (file.readChar)})
fileGen file -> makeGen (yield => withFile file "r" (file => while (!(file.atEOF)) {yield (file.readChar)}))
fileGen file -> makeGen (yield => withFile file "r" (file => while (!(file.atEOF)) {yield (file.readChar)}))
withFile 'test' 'r' (file => {println (file.readChar); println (file.readChar); println (file.readChar)})
a (b.c)
a b.c
a (b.c)
a b.c
fileGen file -> makeGen (yield => withFile file "r" (file => while (!(file.atEOF)) {yield (file.readChar)}))
withFile 'test' 'r' (file => {println (file.readChar); println (file.readChar); println (file.readChar)})
withFile 'test' 'r' (file => {println (file.readChar); println (file.readChar); println file.readChar})
withFile 'test' 'r' (file => {println (file.readChar); println (file.readChar)})
withFile 'test' 'r' (file => {println (file.readChar); println (file.readChar}))
withFile 'test' 'r' (file => println (file.readChar); println (file.readChar))
fileGen file -> makeGen (yield => withFile file "r" (file => while (!(file.atEOF)) {yield (file.readChar)}))
testGen = fileGen "test"
fileGen file -> makeGen (yield => withFile file "r" (file => while (!(file.atEOF)) {yield (file.readChar)}))
testGen = fileGen "test"
testGen.cur
fileGen.cur
testGen = fileGen "test"
fileGen file -> makeGen (yield => withFile file "r" (file => while (!file.atEOF) {yield (file.readChar)}))
withFile 'test' 'r' (file => println (file.readChar))
withFile 'test' 'r' (file => println (file.readChar))
withFile 'test' 'r' (file => file.readChar)
5.div (2.div 3)
5.div 2.(div 3)
5.div 2.div 3
(5.div 2).div 3
5.div 2
5.div 2 | div 3
5.div 2 | div 3
