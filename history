echo wd
println wd
(simpleGen.cur) 5
simpleGen.cur 5
simpleGen.cur
simpleGen.cur + 2
while (simpleGen.moveNext) {println simpleGen.cur}
simpleGen = withGen {yield => {yield 5; yield 10; yield 20}}
println (b.c)
println b.c
print b.c
b = new {c = 5}
a (b.c)
a b.c
while (simpleGen.moveNext) {println (simpleGen.cur)}
while (simpleGen.moveNext) {println simpleGen.cur}
simpleGen.moveNext
while (simpleGen.moveNext) {println simpleGen.cur}
while (simpleGen.moveNext) {println (simpleGen.cur)}
simpleGen = withGen {yield => {yield 5; yield 10; yield 20}}
exit
while (simpleGen.moveNext) {println (simpleGen.cur)}
while (simpleGen.moveNext) {println simpleGen.cur}
simpleGen = withGen {yield => {yield 5; yield 10; yield 20}}
while (simpleGen.moveNext) {println (simpleGen.cur)}
while (simpleGen.moveNext) {println simpleGen.cur}
while (simpleGen.moveNext) {println (simpleGen.cur)}
while (simpleGen.moveNext) {println simpleGen.cur}
simpleGen = withGen {yield => {yield 5; yield 10; yield 20}}
exit
dupEvery 5
dupEvery gen -> withGen {yield => while (gen.moveNext) {yield gen.cur; yield gen.cur}}
gen.moveNext
gen.cur
gen.moveNext
gen.cur
gen.moveNext
gen.cur
gen.moveNext
gen.cur
gen.moveNext
gen = dupEvery simpleGen
dupEvery gen -> withGen {yield => while (gen.moveNext) {yield gen.cur; yield gen.cur}}
simpleGen = withGen {yield => {yield 5; yield 10}}
eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee
eeeeeeee
eeeeeeee
void
exit
simpleGen.cur
simpleGen.moveNext
simpleGen.cur
simpleGen.moveNext
simpleGen.cur
simpleGen.moveNext
simpleGen = withGen {yield => {yield 5; yield 10}}
simpleGen.moveNext
simpleGen.cur
simpleGen.moveNext
simpleGen.cur
simpleGen.moveNext
simpleGen.cur
simpleGen = withGen {yield => {yield 5; yield 10}}
simpleGen = withGen {yield => {yield 5; yield 10}}
{yield => {yield 5; yield 10}} 5
{yield => {yield 5; yield 10}}
{yield => yield 5; yield 10}
simpleGen = withGen {yield => yield 5; yield 10}
ntaynfytf
exit
ntfyntyf
exit
exit
naytfnafyunt
yield
simpleGen = withGen {yield => yield 5; yield 10}
exit
6 `div` 2 `div` 3
6 `div` 2
6 div 2 | div 3
6 div 2 div 3
exit
exit
ls
